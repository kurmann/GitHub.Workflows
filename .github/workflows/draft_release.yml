name: Draft Release
on:
  push:

env:
  VERSION_INCREMENT: 'minor'  # Alternativ: major, patch

jobs:
  read_release_data:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release
        id: get_latest_release
        run: |
          RELEASE_JSON=$(gh release view --json tagName,name,url)
          RELEASE_TAG_NAME=$(echo "$RELEASE_JSON" | jq -r '.tagName')
          LATEST_VERSION="${RELEASE_TAG_NAME#"v"}" # Remove leading 'v'
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
          echo "::set-output name=latest_version::$LATEST_VERSION"
    outputs:
      latest_version: ${{ steps.get_latest_release.outputs.latest_version }}

  calculate_next_version:
    needs: read_release_data
    runs-on: ubuntu-latest
    steps:
      - name: Calculate next version
        id: calculate_version
        run: |
          LATEST_VERSION=${{ needs.read_release_data.outputs.latest_version }}
          IFS='.' read -ra VERSION_PARTS <<< "$LATEST_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          if [[ "$VERSION_INCREMENT" == "major" ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "$VERSION_INCREMENT" == "minor" ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ "$VERSION_INCREMENT" == "patch" ]]; then
            PATCH=$((PATCH + 1))
          fi
          NEXT_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
          echo "::set-output name=next_version::$NEXT_VERSION"
    outputs:
      next_version: ${{ steps.calculate_version.outputs.next_version }}

  draft_release:
    needs: calculate_next_version
    runs-on: ubuntu-latest
    steps:
      - name: Print next version for verification
        run: |
          echo "Next Version: ${{ needs.calculate_next_version.outputs.next_version }}"

      - name: Run Release Drafter
        uses: release-drafter/release-drafter@v6
        with:
          config-name: 'release-drafter-config.yml'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_VERSION: ${{ needs.calculate_next_version.outputs.next_version }}
